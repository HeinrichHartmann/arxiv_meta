["1701.05431",{"format":[],"subject":["Computer Science - Distributed, Parallel, and Cluster Computing","Computer Science - Mathematical Software","Mathematics - Numerical Analysis"],"relation":[],"rights":[],"publisher":[],"source":[],"contributor":[],"identifier":["http://arxiv.org/abs/1701.05431","ESAIM: Proceedings and Surveys, EDP Sciences, pp.1 - 10 (2017)"],"date":["2017-01-19"],"type":["text"],"creator":["Essadki, Mohamed","Jung, Jonathan","Larat, Adam","Pelletier, Milan","Perrier, Vincent"],"language":[],"coverage":[],"title":["A task-driven implementation of a simple numerical solver for hyperbolic\n  conservation laws"],"description":["  This article describes the implementation of an all-in-one numerical\nprocedure within the runtime StarPU. In order to limit the complexity of the\nmethod, for the sake of clarity of the presentation of the non-classical\ntask-driven programming environnement, we have limited the numerics to first\norder in space and time. Results show that the task distribution is efficient\nif the tasks are numerous and individually large enough so that the task heap\ncan be saturated by tasks which computational time covers the task management\noverhead. Next, we also see that even though they are mostly faster on graphic\ncards, not all the tasks are suitable for GPUs, which brings forward the\nimportance of the task scheduler. Finally, we look at a more realistic system\nof conservation laws with an expensive source term, what allows us to conclude\nand open on future works involving higher local arithmetic intensity, by\nincreasing the order of the numerical method or by enriching the model\n(increased number of parameters and therefore equations).\n"]}]
